import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "../globals.css";
import { ThemeInitializer } from "@/components/ThemeInitializer";
import { ToastContainer } from "react-toastify";
import { getServerSession } from "next-auth";
import { redirect } from "next/navigation";
import { Header, MenuAside } from "@/components/Shared";
import { ManagerLayout } from "@/components/Shared/Layouts/Manager";
import { Footer } from "@/components/Shared/Footer";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});
const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface RootLayoutProps {
  children: React.ReactNode;
  cookies?: string;
}

function getThemeFromCookie(cookie?: string): "light" | "dark" {
  if (!cookie) return "light";
  const match = cookie.match(/theme=(dark|light)/);
  return match ? (match[1] as "light" | "dark") : "light";
}

export default async function RootLayout({
  children,
  cookies,
}: RootLayoutProps) {
  const theme = getThemeFromCookie(cookies);
  const session = await getServerSession();

  const user = session?.user;
  if (!session) {
    redirect("/");
  }

  return (
    <html lang="pt-BR" className={theme === "dark" ? "dark" : ""} data-testid="root-layout-manage" style={{ height: '100%' }} >
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`} style={{ height: '100%', margin: 0 }}>
        <ThemeInitializer />
        <ManagerLayout>
          <Header />
          <ToastContainer />
          <MenuAside />
            {children}
          <Footer />
        </ManagerLayout>
      </body>
    </html>
  );
}

{/* <SideBar username={user?.name ?? "guest"} img={user?.image ?? "avatar.svg"} /> */}
