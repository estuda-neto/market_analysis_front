import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "../globals.css";
import { ThemeInitializer } from "@/components/ThemeInitializer";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});
const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface RootLayoutProps {
  children: React.ReactNode;
  cookies?: string;
}

function getThemeFromCookie(cookie?: string): 'light' | 'dark' {
  if (!cookie) return 'light';
  const match = cookie.match(/theme=(dark|light)/);
  return match ? (match[1] as 'light' | 'dark') : 'light';
}

export default function RootLayout({ children, cookies }: RootLayoutProps) { 
  const theme = getThemeFromCookie(cookies);

  return (
    <html lang="pt-BR" className={theme === 'dark' ? 'dark' : ''} data-testid="root-layout">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <ThemeInitializer/>
        {children}
      </body>
    </html>
  );
}
